package pagopa.pagopa_api.pa.pafornode_wsdl;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.4.4 2021-07-05T17:41:14.690+02:00
 * Generated source version: 3.4.4
 *
 */
@WebServiceClient(name = "merged_Service", wsdlLocation = "file:/D:/Works/GIT/OpeIadSccDcc/PagoPa/PA_Mock/src/main/resources/merge2ws.wsdl", targetNamespace = "http://pagopa-api.pagopa.gov.it/pa/paForNode.wsdl")
public class MergedService extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("http://pagopa-api.pagopa.gov.it/pa/paForNode.wsdl",
			"merged_Service");
	public final static QName MergedPort = new QName("http://pagopa-api.pagopa.gov.it/pa/paForNode.wsdl",
			"merged_Port");
	static {
		URL url = null;
		try {
			url = new URL("file:/D:/Works/GIT/OpeIadSccDcc/PagoPa/PA_Mock/src/main/resources/merge2ws.wsdl");
		} catch (MalformedURLException e) {
			java.util.logging.Logger.getLogger(MergedService.class.getName()).log(java.util.logging.Level.INFO,
					"Can not initialize the default wsdl from {0}",
					"file:/D:/Works/GIT/OpeIadSccDcc/PagoPa/PA_Mock/src/main/resources/merge2ws.wsdl");
		}
		WSDL_LOCATION = url;
	}

	public MergedService(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public MergedService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public MergedService() {
		super(WSDL_LOCATION, SERVICE);
	}

	public MergedService(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	public MergedService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	public MergedService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 *
	 * @return returns MergedPortType
	 */
	@WebEndpoint(name = "merged_Port")
	public MergedPortType getMergedPort() {
		return super.getPort(MergedPort, MergedPortType.class);
	}

	/**
	 *
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *                 on the proxy. Supported features not in the
	 *                 <code>features</code> parameter will have their default
	 *                 values.
	 * @return returns MergedPortType
	 */
	@WebEndpoint(name = "merged_Port")
	public MergedPortType getMergedPort(WebServiceFeature... features) {
		return super.getPort(MergedPort, MergedPortType.class, features);
	}

}
